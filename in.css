@import url("https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0");

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: "poppins", "sans-serif";
}

body {
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    background-image: url("./images/R.jpeg");
    background-size: cover;
    background-attachment: fixed;
    background-position: center;
    background-repeat: no-repeat;
    overflow: hidden;
}

.container {
    width: 400px;
    position: relative;
    height: 100px;
    border-radius: 15px;
    padding: 20px;
    background: rgba(225, 225, 225, .1);
    backdrop-filter: blur(30px);
    border: 2px solid rgba(225, 225, 225, .2);
    border-radius: 16px;
    padding: 20px;
    color: #fff;
    transition: height .6s ease;
}

.search-box {
    position: relative;
    width: 100%;
    height: 55px;
    display: flex;
    align-items: center;
}

.search-box i {
    position: absolute;
    left: 10px;
    font-size: 28px;
}

.search-box input {
    position: absolute;
    height: 100%;
    width: 100%;
    border: 2px solid rgba(255, 255, 255, .2);
    outline: none;
    background: transparent;
    border-radius: 10px;
    color: #fff;
    font-size: 25px;
    font-weight: 500;
    text-transform: uppercase;
    padding: 0 48px 0 42px;
}

.search-box input::placeholder {
    color: #fff;
    text-transform: capitalize;
}

.search-box button {
    position: absolute;
    right: 0;
    border: none;
    outline: none;
    height: 100%;
    width: 40px;
    background: transparent;
    cursor: pointer;
    margin-left: 10px;
    color: #fff;
    font-size: 28px;
    padding: 0 40px 0 5px;
}

.weather-box {
    text-align: center;
    margin: 40px 0;
}

.weather-box,
.weather-details,
.not-found {
    overflow: hidden;
    visibility: hidden;
}

.weather-box.active,
.weather-details.active,
.not-found.active {
    visibility: visible;
}

.weather-box .box,
.not-found .box {
    transform: translateY(-100%);
}

.weather-box.active .box,
.not-found.active .box {
    transform: translateY(0%);
    transition: transform 1s ease;
    transition-delay: .6s;
}

.weather-box .box .info-weather {
    transform: translateY(-120%);
}

.container.active .weather-box .box .info-weather,
.container.active .weather-details .humidity .info-humidity,
.container.active .weather-details .wind .info-wind {
    transform: translateY(0%);
    transition: transform 1s ease;
}

.weather-box img {
    width: 60%;
}

.weather-box .temperature {
    position: relative;
    font-size: 64px;
    line-height: 1;
    font-weight: 700;
    margin: 20px 0 6px -30px;
}

.weather-box .temperature span {
    position: absolute;
    font-size: 24px;
    margin-left: 4px;
}

.weather-box .description {
    font-size: 22px;
    font-weight: 500;
    text-transform: capitalize;
}

.weather-details {
    position: absolute;
    bottom: 40px;
    left: 0;
    width: 100%;
    padding: 0 20px;
    display: flex;
    justify-content: space-between;
}

.weather-details i {
    font-size: 56px;
    margin-right: 10px;
}

.weather-details span {
    display: inline-block;
    font-size: 22px;
    font-weight: 500;
}

.weather-details .humidity,
.weather-details .wind {
    display: flex;
    align-items: center;
    transition: transform 1s ease;
}

.weather-details .humidity .info-humidity,
.weather-details .wind .info-wind {
    overflow: hidden;
}

.weather-details p {
    font-size: 14px;
    font-weight: 500;
}

.city-hide {
    display: none;
}

.not-found {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    text-align: center;
    margin-top: 110px;
}

.not-found img {
    width: 65%;
}

.not-found p {
    font-size: 22px;
    font-weight: 500;
    margin-top: 12px;
}

#clone-info-weather,
#clone-info-humidity,
#clone-info-wind {
    position: absolute;
    transform: translateY(-100%);
}

#clone-info-weather .weather {
    transform: translateY(120%);
    transition: transform 1s ease, opacity 0s;
    transition-delay: 0s, 2s;
}

.weather-box:not(.active) #clone-info-weather .weather {
    opacity: 0;
    transition-delay: 0s;
}

.active-clone#clone-info-weather .weather {
    transform: translateY(0%);
}

#clone-info-humidity span,
#clone-info-wind span {
    transform: translateY(100%);
    transition: transform 1s ease;
}

.active-clone#clone-info-humidity span,
.active-clone#clone-info-wind span{
    transform:translateY(0%)
}




const container = document.querySelector(".container");
const search = document.querySelector(".search-box button");
const weatherBox = document.querySelector(".weather-box");
const weatherDetails = document.querySelector(".weather-details");
const error404 = document.querySelector('.not-found');
const cityHide = document.querySelector('.city-hide');

document.addEventListener('DOMContentLoaded', () => {
  if (navigator.geolocation) {
    navigator.geolocation.getCurrentPosition(
      position => {
        const { latitude, longitude } = position.coords;
        fetchWeatherByCoordinates(latitude, longitude);
      },
      error => {
        console.error('Error occurred. Error code: ' + error.code);
        handleLocationError(error);
      }
    );
  } else {
    alert('Geolocation is not supported by this browser.');
  }
});

search.addEventListener('click', () => {
  const city = document.querySelector(".search-box input").value;
  if (city === '') return;
  fetchWeatherByCity(city);
});

function fetchWeatherByCoordinates(lat, lon) {
  const APIKEY = "77652c5df0d1c3bcb7766690f075cf1b";
  fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&units=metric&appid=${APIKEY}`)
    .then(response => response.json())
    .then(json => displayWeather(json));
}

function fetchWeatherByCity(city) {
  const APIKEY = "77652c5df0d1c3bcb7766690f075cf1b";
  fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${APIKEY}`)
    .then(response => response.json())
    .then(json => displayWeather(json, city));
}

function displayWeather(json, city = null) {
  console.log(json);

  if (json.cod === '404') {
    if (city) cityHide.textContent = city;
    container.style.height = "400px";
    weatherBox.classList.remove('active');
    weatherDetails.classList.remove('active');
    error404.classList.add('active');
    return;
  }

  const image = document.querySelector('.weather-box img');
  const temperature = document.querySelector(".weather-box .temperature");
  const description = document.querySelector(".weather-box .description");
  const humidity = document.querySelector(".weather-details .humidity span");
  const wind = document.querySelector(".weather-details .wind span");
  const weatherCondition = json.weather[0].main;
  const cityName = document.querySelector(".weather-box .city-name");

  if (city && cityHide.textContent === city) return;

  if (city) cityHide.textContent = city;
  container.style.height = "555px";
  container.classList.add('active');
  weatherBox.classList.add('active');
  weatherDetails.classList.add('active');
  error404.classList.remove('active');
  setTimeout(() => {
    container.classList.remove('active');
  }, 2000);

  switch (weatherCondition) {
    case 'Clear':
      image.src = "./images/clear.png";
      break;
    case 'Rain':
      image.src = "./images/rain.png";
      break;
    case 'Snow':
      image.src = "./images/snow.png";
      break;
    case 'Clouds':
      image.src = "./images/cloud.png";
      break;
    case 'Mist':
    case 'Haze':
      image.src = "./images/mist.png";
      break;
    default:
      image.src = "./images/cloud.png";
      break;
  }
  cityName.innerHTML = city ? city : json.name;
  temperature.innerHTML = `${parseInt(json.main.temp)}<span>Â°C</span>`;
  description.innerHTML = `${json.weather[0].description}`;
  humidity.innerHTML = `${json.main.humidity}%`;
  wind.innerHTML = `${parseInt(json.wind.speed)}km/h`;

  const infoWeather = document.querySelector('.info-weather');
  const infoHumidity = document.querySelector('.info-humidity');
  const infoWind = document.querySelector('.info-wind');

  const elCloneInfoWeather = infoWeather.cloneNode(true);
  const elCloneInfoHumidity = infoHumidity.cloneNode(true);
  const elCloneInfoWind = infoWind.cloneNode(true);

  elCloneInfoWeather.id = 'clone-info-weather';
  elCloneInfoWeather.classList.add('active-clone')

  elCloneInfoHumidity.id = 'clone-info-humidity';
  elCloneInfoHumidity.classList.add('active-clone')

  elCloneInfoWind.id = 'clone-info-wind';
  elCloneInfoWind.classList.add('active-clone')

  setTimeout(() => {
    infoWeather.insertAdjacentElement("afterend", elCloneInfoWeather);
    infoHumidity.insertAdjacentElement("afterend", elCloneInfoHumidity);
    infoWind.insertAdjacentElement("afterend", elCloneInfoWind);
  }, 2000);

  const cloneInfoWeather = document.querySelectorAll('.info-weather.active-clone');
  const totalCloneInfoWeather = cloneInfoWeather.length;
  const cloneInfoWeatherFirst = cloneInfoWeather[0];

  const cloneInfoHumidity = document.querySelectorAll('.info-humidity.active-clone');
  const cloneInfoHumidityFirst = cloneInfoHumidity[0];

  const cloneInfoWind = document.querySelectorAll('.info-wind.active-clone');
  const cloneInfoWindFirst = cloneInfoWind[0];

  if (totalCloneInfoWeather > 0) {
    cloneInfoWeatherFirst.classList.remove('active-clone');
    cloneInfoHumidityFirst.classList.remove('active-clone');
    cloneInfoWindFirst.classList.remove('active-clone');

    setTimeout(() => {
      cloneInfoWeatherFirst.remove();
      cloneInfoHumidityFirst.remove();
      cloneInfoWindFirst.remove();
    }, 2200);
  }
}

function handleLocationError(error) {
  if (error.code === error.PERMISSION_DENIED) {
    alert('Location access denied. Please enter your location manually.');
  } else {
    alert('Unable to retrieve your location. Please enter your location manually.');
  }
}


@import url("https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0");

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: "Poppins", "sans-serif";
}

body {
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    background-image: url("./images/R.jpeg");
    background-size: cover;
    background-attachment: fixed;
    background-position: center;
    background-repeat: no-repeat;
    overflow: hidden;
}

.container {
    width: 400px;
    position: relative;
    height: 100px;
    border-radius: 15px;
    padding: 20px;
    background: rgba(225, 225, 225, .1);
    backdrop-filter: blur(30px);
    border: 2px solid rgba(225, 225, 225, .2);
    color: #fff;
    transition: height .6s ease;
}

.search-box {
    position: relative;
    width: 100%;
    height: 55px;
    display: flex;
    align-items: center;
}

.search-box i {
    position: absolute;
    left: 10px;
    font-size: 28px;
}

.search-box input {
    height: 100%;
    width: 100%;
    border: 2px solid rgba(255, 255, 255, .2);
    outline: none;
    background: transparent;
    border-radius: 10px;
    color: #fff;
    font-size: 25px;
    font-weight: 500;
    text-transform: uppercase;
    padding: 0 48px 0 42px;
}

.search-box input::placeholder {
    color: #fff;
    text-transform: capitalize;
}

.search-box button {
    position: absolute;
    right: 0;
    border: none;
    outline: none;
    height: 100%;
    width: 40px;
    background: transparent;
    cursor: pointer;
    margin-left: 10px;
    color: #fff;
    font-size: 28px;
    padding: 0 40px 0 5px;
}

.weather-box {
    text-align: center;
    margin: 40px 0;
}

.weather-box,
.weather-details,
.not-found {
    overflow: hidden;
    visibility: hidden;
}

.weather-box.active,
.weather-details.active,
.not-found.active {
    visibility: visible;
}

.weather-box .box,
.not-found .box {
    transform: translateY(-100%);
}

.weather-box.active .box,
.not-found.active .box {
    transform: translateY(0%);
    transition: transform 1s ease;
    transition-delay: .6s;
}

.weather-box .box .info-weather {
    transform: translateY(-120%);
}

.container.active .weather-box .box .info-weather,
.container.active .weather-details .humidity .info-humidity,
.container.active .weather-details .wind .info-wind {
    transform: translateY(0%);
    transition: transform 1s ease;
}

.weather-box img {
    width: 60%;
}

.weather-box .temperature {
    position: relative;
    font-size: 64px;
    line-height: 1;
    font-weight: 700;
    margin: 20px 0 6px -30px;
}

.weather-box .temperature span {
    position: absolute;
    font-size: 24px;
    margin-left: 4px;
}

.weather-box .description {
    font-size: 22px;
    font-weight: 500;
    text-transform: capitalize;
}

.weather-details {
    position: absolute;
    bottom: 40px;
    left: 0;
    width: 100%;
    padding: 0 20px;
    display: flex;
    justify-content: space-between;
}

.weather-details i {
    font-size: 56px;
    margin-right: 10px;
}

.weather-details span {
    display: inline-block;
    font-size: 22px;
    font-weight: 500;
}

.weather-details .humidity,
.weather-details .wind {
    display: flex;
    align-items: center;
    transition: transform 1s ease;
}

.weather-details .humidity .info-humidity,
.weather-details .wind .info-wind {
    overflow: hidden;
}

.weather-details p {
    font-size: 14px;
    font-weight: 500;
}

.city-hide {
    display: none;
}

.weather .city-name {
    font-size: 28px;
    font-weight: 600;
    margin: 10px 0;
}

.not-found {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    text-align: center;
    margin-top: 110px;
}

.not-found img {
    width: 65%;
}

.not-found p {
    font-size: 22px;
    font-weight: 500;
    margin-top: 12px;
}

#clone-info-weather,
#clone-info-humidity,
#clone-info-wind {
    position: absolute;
    transform: translateY(-100%);
}

#clone-info-weather .weather {
    transform: translateY(120%);
    transition: transform 1s ease, opacity 0s;
    transition-delay: 0s, 2s;
}

.weather-box:not(.active) #clone-info-weather .weather {
    opacity: 0;
    transition-delay: 0s;
}

.active-clone#clone-info-weather .weather {
    transform: translateY(0%);
}

#clone-info-humidity span,
#clone-info-wind span {
    transform: translateY(100%);
    transition: transform 1s ease;
}

.active-clone#clone-info-humidity span,
.active-clone#clone-info-wind span {
    transform: translateY(0%);
}


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Weather App</title>
    <link rel="stylesheet" href="index.css" />
    <link href='https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'>
</head>
<body>
    <div class="container">
        <div class="search-box">
            <i class='bx bxs-map'></i>
            <input type="text" placeholder="Enter Your location" />
            <button class='bx bx-search'></button>
        </div>
        <p class="city-hide"> city hide</p>
        <div class="weather-box">
            <div class="box">
                <div class="info-weather">
                    <div class="weather">
                        <img src="./images/cloud.png">
                        <p class="city-name">City Name</p> <!-- Add this line -->
                        <p class="temperature">0<span>Â°C</span></p>
                        <p class="description">Broken Clouds</p>
                    </div>
                </div>
            </div>
        </div>
        <div class="weather-details">
            <div class="humidity">
                <i class='bx bx-water'></i>
                <div class="text">
                    <div class="info-humidity">
                        <span>0%</span>
                    </div>
                    <p>Humidity</p>
                </div>
            </div>
            <div class="wind">
                <i class='bx bx-wind'></i>
                <div class="text">
                    <div class="info-wind">
                        <span>0km/h</span>
                    </div>
                    <p>Wind Speed</p>
                </div>
            </div>
        </div>
        <div class="not-found">
            <div class="box">
                <img src="./images/404.png">
                <p>OOps! Location not Found</p>
            </div>
        </div>
    </div>
    <script src="index.js"></script>
</body>
</html>


